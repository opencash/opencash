// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#ifndef ACCOUNTS_META_ODB_HXX
#define ACCOUNTS_META_ODB_HXX

#include <odb/version.hxx>

#if (ODB_VERSION != 20300UL)
#error ODB runtime version mismatch
#endif

#include <odb/pre.hxx>

#include <opencash/core/AccountsMeta.h>

#include "Account-odb.hxx"
#include "ManagedObject-odb.hxx"
#include "Split-odb.hxx"
#include "Transaction-odb.hxx"

#include <memory>
#include <cstddef>

#include <odb/core.hxx>
#include <odb/traits.hxx>
#include <odb/callback.hxx>
#include <odb/wrapper-traits.hxx>
#include <odb/pointer-traits.hxx>
#include <odb/container-traits.hxx>
#include <odb/session.hxx>
#include <odb/cache-traits.hxx>
#include <odb/result.hxx>
#include <odb/view-result.hxx>

#include <odb/details/unused.hxx>
#include <odb/details/shared-ptr.hxx>

namespace odb
{
  // AccountsMeta
  //
  template <>
  struct class_traits< ::opencash::core::AccountsMeta >
  {
    static const class_kind kind = class_view;
  };

  template <>
  class access::view_traits< ::opencash::core::AccountsMeta >
  {
    public:
    typedef ::opencash::core::AccountsMeta view_type;
    typedef ::opencash::core::AccountsMeta* pointer_type;

    static void
    callback (database&, view_type&, callback_event);
  };
}

#include <odb/details/buffer.hxx>

#include <odb/sqlite/version.hxx>
#include <odb/sqlite/forward.hxx>
#include <odb/sqlite/binding.hxx>
#include <odb/sqlite/sqlite-types.hxx>
#include <odb/sqlite/query.hxx>

namespace odb
{
  // AccountsMeta
  //
  template <>
  class access::view_traits_impl< ::opencash::core::AccountsMeta, id_sqlite >:
    public access::view_traits< ::opencash::core::AccountsMeta >
  {
    public:
    struct image_type
    {
      // _count
      //
      long long _count_value;
      bool _count_null;

      std::size_t version;
    };

    typedef sqlite::view_statements<view_type> statements_type;

    typedef sqlite::query_base query_base_type;
    struct query_columns;

    static const bool versioned = false;

    static bool
    grow (image_type&,
          bool*);

    static void
    bind (sqlite::bind*,
          image_type&);

    static void
    init (view_type&,
          const image_type&,
          database*);

    static const std::size_t column_count = 1UL;

    static query_base_type
    query_statement (const query_base_type&);

    static result<view_type>
    query (database&, const query_base_type&);
  };

  template <>
  class access::view_traits_impl< ::opencash::core::AccountsMeta, id_common >:
    public access::view_traits_impl< ::opencash::core::AccountsMeta, id_sqlite >
  {
  };

  // AccountsMeta
  //
  struct access::view_traits_impl< ::opencash::core::AccountsMeta, id_sqlite >::query_columns:
    odb::pointer_query_columns<
      ::opencash::core::Account,
      id_sqlite,
      odb::access::object_traits_impl< ::opencash::core::Account, id_sqlite > >
  {
  };
}

#include <AccountsMeta-odb.ixx>

#include <odb/post.hxx>

#endif // ACCOUNTS_META_ODB_HXX
