set(SOURCES
  controller/ManagedObjectContext.cpp
  controller/DocumentController.cpp
  controller/ModelObserver.cpp
  model/ObservableModel.cpp
  model/ManagedObject.cpp
  model/Account.cpp
  model/AccountsMeta.cpp
  model/Transaction.cpp
  model/TransactionsMeta.cpp
  model/Split.cpp
)

set(ODB_MODELS
  ManagedObject
  Account
  AccountsMeta
  Transaction
  TransactionsMeta
  Split
)

# Needed for the headers generated by ODB inside the src directory
include_directories(
  .
)

### ODB Compilation

set(ODB_DEPENDS)
set(ODB_OUTPUT)
foreach(_model ${ODB_MODELS})
  set(_file "${CMAKE_CURRENT_SOURCE_DIR}/generated/${_model}-odb")
  list(APPEND SOURCES
    "${_file}.cxx"
  )
  list(APPEND ODB_OUTPUT
    "${_file}.cxx"
    "${_file}.hxx"
    "${_file}.ixx"
  )
  list(APPEND ODB_DEPENDS "../include/opencash/model/${_model}.h")
endforeach()

if(NOT OC_PLATFORM_HOST)
  find_host_program(ODB_EXECUTABLE odb)
else()
  find_program(ODB_EXECUTABLE odb)
endif()
set(ODB_OUTPUT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/generated)
add_custom_command(
  OUTPUT ${ODB_OUTPUT}
  COMMAND ${CMAKE_COMMAND} -E make_directory ${ODB_OUTPUT_DIR}
  COMMAND ${ODB_EXECUTABLE}
  ARGS --std c++11 -d sqlite --generate-query --generate-schema
    -I ${CMAKE_CURRENT_SOURCE_DIR}/../include
    -I ${OC_INSTALL_INCLUDE_DIR}
    --include-with-brackets --include-prefix "opencash/model"
    --include-regex |opencash/model/\(.+\)-odb\\.\(.?\)xx|generated/$1-odb.$2xx|
    -o ${ODB_OUTPUT_DIR}
    ${ODB_DEPENDS}
  DEPENDS ${ODB_DEPENDS}
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  COMMENT "Creating code for ODB models"
  VERBATIM
)
add_custom_target(odb_create DEPENDS ${ODB_OUTPUT})

### Build library

add_library(${OC_LIB_NAME}
  ${SOURCES}
)

target_link_libraries(${OC_LIB_NAME}
  PocoFoundation
  odb-sqlite
  odb
  sqlite3
)

### Copy public headers to install dir

#add_custom_target(${OC_LIB_NAME}_copy_public_headers
#  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
#  COMMAND ${CMAKE_COMMAND} -E copy_directory
#    ../include
#    ${OC_INSTALL_INCLUDE_DIR}
#  COMMENT "Copying public headers to ${OC_INSTALL_INCLUDE_DIR}"
#)
#add_dependencies(${OC_LIB_NAME} ${OC_LIB_NAME}_copy_public_headers)

### Copy built library to install dir

add_custom_command(
  TARGET ${OC_LIB_NAME} POST_BUILD
  COMMAND ${CMAKE_COMMAND} -E copy
    $<TARGET_FILE:${OC_LIB_NAME}>
    ${OC_INSTALL_LIB_DIR}/$<TARGET_FILE_NAME:${OC_LIB_NAME}>
  COMMENT "Copying ${OC_LIB_NAME} to ${OC_INSTALL_LIB_DIR}"
)
